"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Image:
    r"""
    Image is the Schema for the images API.

    Attributes
    ----------
    apiVersion : str, default is "core.platformspec.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Image", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CorePlatformspecIoV1alpha1ImageSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        ImageStatus defines the observed state of Image.
    """


    apiVersion: "core.platformspec.io/v1alpha1" = "core.platformspec.io/v1alpha1"

    kind: "Image" = "Image"

    metadata?: v1.ObjectMeta

    spec?: CorePlatformspecIoV1alpha1ImageSpec

    status?: any


schema CorePlatformspecIoV1alpha1ImageSpec:
    r"""
    ImageSpec defines the desired state of Image.

    Attributes
    ----------
    category : str, default is Undefined, required
        Indicates the type of image being defined.
    spec : CorePlatformspecIoV1alpha1ImageSpecSpec, default is Undefined, required
        spec
    """


    category: "machine" | "container"

    spec: CorePlatformspecIoV1alpha1ImageSpecSpec


schema CorePlatformspecIoV1alpha1ImageSpecSpec:
    r"""
    Contains configuration details specific to the image.

    Attributes
    ----------
    builder : CorePlatformspecIoV1alpha1ImageSpecSpecBuilder, default is Undefined, optional
        builder
    default : bool, default is Undefined, optional
        Indicates whether this image is the default choice for a given provider and environment combination. This helps simplify deployments by setting up common starting points.
    environmentRefs : [CorePlatformspecIoV1alpha1ImageSpecSpecEnvironmentRefsItems0], default is Undefined, required
        References Environment resources indicating the environments where this image is intended to be used. This ensures that the correct images are targeted for different deployment stages.
    providerRefs : [CorePlatformspecIoV1alpha1ImageSpecSpecProviderRefsItems0], default is Undefined, required
        References Provider resources specifying the cloud platform on which the image can be deployed (e.g., AWS, Azure).
    reference : CorePlatformspecIoV1alpha1ImageSpecSpecReference, default is Undefined, optional
        reference
    version : str, default is Undefined, required
        Represents the version of the image using semantic versioning (e.g., v1.28.13). This helps track and manage image updates effectively.
    """


    builder?: CorePlatformspecIoV1alpha1ImageSpecSpecBuilder

    default?: bool = False

    environmentRefs: [CorePlatformspecIoV1alpha1ImageSpecSpecEnvironmentRefsItems0]

    providerRefs: [CorePlatformspecIoV1alpha1ImageSpecSpecProviderRefsItems0]

    reference?: CorePlatformspecIoV1alpha1ImageSpecSpecReference

    version: str


schema CorePlatformspecIoV1alpha1ImageSpecSpecBuilder:
    r"""
    core platformspec io v1alpha1 image spec spec builder

    Attributes
    ----------
    config : any, default is Undefined, optional
        Contains configuration parameters specific to the chosen builder driver
    driver : str, default is Undefined, required
        Specifies the type of image builder to use for creating this image
    """


    config?: any

    driver: str


schema CorePlatformspecIoV1alpha1ImageSpecSpecEnvironmentRefsItems0:
    r"""
    ObjectReference contains enough information to let you inspect or modify the referred object.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CorePlatformspecIoV1alpha1ImageSpecSpecProviderRefsItems0:
    r"""
    ObjectReference contains enough information to let you inspect or modify the referred object.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CorePlatformspecIoV1alpha1ImageSpecSpecReference:
    r"""
    core platformspec io v1alpha1 image spec spec reference

    Attributes
    ----------
    id : str, default is Undefined, required
        Unique identifier of a pre-existing image (e.g., AMI ID for machine images). This field is used when you are referencing an image that already exists in your cloud provider's registry.
    location : str, default is Undefined, optional
        Specifies the region where the pre-existing image is located.
    """


    id: str

    location?: str


